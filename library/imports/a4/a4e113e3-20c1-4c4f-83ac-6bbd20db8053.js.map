{"version":3,"sources":["../../../../../assets/scripts/core/assets/scripts/core/ShipControl.js"],"names":["cc","Class","extends","Component","properties","bulletPrefab","Prefab","bulletHolder","Node","steerLeft","SpriteFrame","steerRight","steerForward","speed","onLoad","systemEvent","on","SystemEvent","EventType","KEY_UP","onKeyUp","KEY_DOWN","onKeyDown","_sprite","node","getComponentInChildren","Sprite","state","isMoving","isMovingLeft","isMovingRight","event","keyCode","macro","KEY","space","shootCommand","a","d","s","w","isMovingHorizontal","spriteFrame","bullet","instantiate","parent","position","getPosition","_steerHorizontal","isRight","_steerVertical","isForward","update","dt","x","verticalTween","stop"],"mappings":"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","file":"ShipControl.js","sourceRoot":"../../../../../assets/scripts/core","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        bulletPrefab: cc.Prefab,\n        bulletHolder: cc.Node,\n\n        steerLeft: cc.SpriteFrame,\n        steerRight: cc.SpriteFrame,\n        steerForward: cc.SpriteFrame,\n\n        speed: 500,\n    },\n\n    onLoad() {\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n\n        this._sprite = this.node.getComponentInChildren(cc.Sprite);\n        this.node.state = this.state = {\n            isMoving: false,\n            isMovingLeft: false,\n            isMovingRight: false,\n\n        };\n    },\n\n    onKeyUp(event) {\n        if (event.keyCode == cc.macro.KEY.space) {\n            return shootCommand();\n        }\n        const { a, d, s, w } = cc.macro.KEY;\n        switch (event.keyCode) {\n            case a:\n                this.state.isMovingLeft = false;\n                break;\n            case d:\n                this.state.isMovingRight = false;\n                break;\n            case w:\n                // this._steerVertical({ isForward: true });\n                break;\n            case s:\n                // this._steerVertical({ isForward: false });\n                break;\n        }\n        const isMovingHorizontal = this.state.isMovingLeft && this.state.isMovingRight;\n        const isMoving = (this.state.isMovingLeft || this.state.isMovingRight) && !isMovingHorizontal;\n        this.state.isMoving = isMoving;\n\n        if (!isMoving) this._sprite.spriteFrame = this.steerForward;\n    },\n\n    shootCommand() {\n        const bullet = cc.instantiate(this.bulletPrefab);\n        bullet.parent = this.bulletHolder;\n        bullet.position = this.node.getPosition();\n    },\n\n    onKeyDown(event) {\n        const { a, d, s, w } = cc.macro.KEY;\n        switch (event.keyCode) {\n            case a:\n                this._steerHorizontal({ isRight: false });\n                this.state.isMovingLeft = true;\n                break;\n            case d:\n                this._steerHorizontal({ isRight: true });\n                this.state.isMovingRight = true;\n                break;\n            case w:\n                this._steerVertical({ isForward: true });\n                break;\n            case s:\n                this._steerVertical({ isForward: false });\n                break;\n        }\n        const isMovingHorizontal = this.state.isMovingLeft && this.state.isMovingRight;\n        this.state.isMoving = (this.state.isMovingLeft || this.state.isMovingRight) && !isMovingHorizontal;\n    },\n\n    _steerHorizontal({ isRight = true }) {\n        if (isRight) this._sprite.spriteFrame = this.steerRight;\n        else this._sprite.spriteFrame = this.steerLeft;\n    },\n\n    update(dt) {\n        const { isMovingLeft, isMovingRight, isMoving } = this.state\n        if (!isMoving) return;\n        if (isMovingLeft) this.node.x += this.speed * -1 * dt;\n        if (isMovingRight) this.node.x += this.speed * dt;\n    },\n\n    _steerVertical({ isForward = true }) {\n        if (this.verticalTween) this.verticalTween.stop();\n    },\n});\n"]}