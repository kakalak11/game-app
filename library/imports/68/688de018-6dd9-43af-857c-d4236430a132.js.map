{"version":3,"sources":["../../../../assets/script/assets/script/notificationScript.js"],"names":["Emitter","require","utilities","cc","Class","extends","Component","properties","label","RichText","_player","_score","onLoad","instance","registerEvent","data","player","score","log","start","string","generateRainbowText","action","repeatForever","sequence","moveTo","node","runAction"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;AACA,IAAMC,YAAYD,QAAQ,SAAR,CAAlB;AACAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAOL,GAAGM,QADF;AAERC,iBAAS,EAFD;AAGRC,gBAAQ;AAHA,KAHP;;AASL;;AAEAC,UAXK,oBAWI;AAAA;;AACLZ,gBAAQa,QAAR,CAAiBC,aAAjB,CAA+B,QAA/B,EAAyC,UAACC,IAAD,EAAU;AAC/C,kBAAKL,OAAL,GAAeK,KAAKC,MAApB;AACA,kBAAKL,MAAL,GAAcI,KAAKE,KAAnB;AACAd,eAAGe,GAAH,CAAOH,IAAP;AACH,SAJD;AAKH,KAjBI;AAmBLI,SAnBK,mBAmBG;AACJ,aAAKX,KAAL,CAAWY,MAAX,GAAoBlB,UAAUmB,mBAAV,yBAAoD,KAAKX,OAAzD,2BAAsF,KAAKC,MAA3F,CAApB;AACA,YAAIW,SAASnB,GAAGoB,aAAH,CACTpB,GAAGqB,QAAH,CACIrB,GAAGsB,MAAH,CAAU,CAAV,EAAa,CAAC,GAAd,EAAmB,CAAnB,CADJ,EAEItB,GAAGsB,MAAH,CAAU,CAAV,EAAa,GAAb,EAAkB,CAAlB,CAFJ,CADS,CAAb;AAMA,aAAKjB,KAAL,CAAWkB,IAAX,CAAgBC,SAAhB,CAA0BL,MAA1B;AACH;AA5BI;;AA8BL;AA9BJ","file":"notificationScript.js","sourceRoot":"../../../../assets/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst Emitter = require('mEmitter');\nconst utilities = require('./utils');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: cc.RichText,\n        _player: '',\n        _score: 0,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        Emitter.instance.registerEvent('notify', (data) => {\n            this._player = data.player;\n            this._score = data.score;\n            cc.log(data);\n        });\n    },\n\n    start() {\n        this.label.string = utilities.generateRainbowText(`The best player is ${this._player} with the score of ${this._score}`);\n        let action = cc.repeatForever(\n            cc.sequence(\n                cc.moveTo(5, -500, 0),\n                cc.moveTo(0, 500, 0),\n            )\n        )\n        this.label.node.runAction(action);\n    },\n\n    // update (dt) {},\n});\n"]}