{"version":3,"sources":["touchScript.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","touchNode","Node","_xDelta","_yDelta","_canTouch","_onTouchStart","event","instance","emit","node","once","xDelta","getLocation","x","getStartLocation","yDelta","y","log","Math","abs","on","onLoad","registerEvent","value","touch","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,mBAAWL,GAAGM,IADN;AAERC,iBAAS,CAFD;AAGRC,iBAAS,CAHD;AAIRC,mBAAW;AAJH,KAHP;;AAUL;;AAEAC,mBAAe,uBAAUC,KAAV,EAAiB;AAC5Bb,gBAAQc,QAAR,CAAiBC,IAAjB,CAAsB,OAAtB,EAA+B,OAA/B;AACA,aAAKC,IAAL,CAAUD,IAAV,CAAe,UAAf,EAA2B,IAA3B;AACA,YAAI,CAAC,KAAKJ,SAAV,EAAqB;AACrB,aAAKA,SAAL,GAAiB,KAAjB;;AAEA,aAAKJ,SAAL,CAAeU,IAAf,CAAoB,UAApB,EAAgC,UAAUJ,KAAV,EAAiB;AAC7C,gBAAIK,SAASL,MAAMM,WAAN,GAAoBC,CAApB,GAAwBP,MAAMQ,gBAAN,GAAyBD,CAA9D;AACA,gBAAIE,SAAST,MAAMM,WAAN,GAAoBI,CAApB,GAAwBV,MAAMQ,gBAAN,GAAyBE,CAA9D;AACArB,eAAGsB,GAAH,CAAO,cAAP,EAAuBN,MAAvB,EAA+B,gBAA/B,EAAiDI,MAAjD;AACA,gBAAIG,KAAKC,GAAL,CAASR,MAAT,MAAqB,CAArB,IAA0BO,KAAKC,GAAL,CAASJ,MAAT,MAAqB,CAAnD,EAAsD;AAClDtB,wBAAQc,QAAR,CAAiBC,IAAjB,CAAsB,SAAtB;AACA;AACH;AACD,gBAAIU,KAAKC,GAAL,CAASR,MAAT,IAAmBO,KAAKC,GAAL,CAASJ,MAAT,CAAvB,EAAyC;AACrC,oBAAIJ,SAAS,CAAb,EAAgB;AACZlB,4BAAQc,QAAR,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiC,IAAjC;AACAb,uBAAGsB,GAAH,CAAO,YAAP;AACH,iBAHD,MAGO;AACHxB,4BAAQc,QAAR,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiC,KAAjC;AACAb,uBAAGsB,GAAH,CAAO,WAAP;AACH;AACJ,aARD,MAQO;AACH,oBAAIF,SAAS,CAAb,EAAgB;AACZtB,4BAAQc,QAAR,CAAiBC,IAAjB,CAAsB,aAAtB,EAAqC,KAArC;AACAb,uBAAGsB,GAAH,CAAO,WAAP;AACH,iBAHD,MAGO;AACHxB,4BAAQc,QAAR,CAAiBC,IAAjB,CAAsB,aAAtB,EAAqC,IAArC;AACAb,uBAAGsB,GAAH,CAAO,SAAP;AACH;AACJ;AACDxB,oBAAQc,QAAR,CAAiBC,IAAjB,CAAsB,SAAtB;AACA;AACH,SA3BD,EA2BG,IA3BH;;AA6BA,aAAKR,SAAL,CAAeoB,EAAf,CAAkB,aAAlB,EAAiC,UAACd,KAAD,EAAW;AACxCb,oBAAQc,QAAR,CAAiBC,IAAjB,CAAsB,SAAtB;AACA;AACH,SAHD,EAGG,IAHH;AAIH,KAnDI;;AAqDLa,UArDK,oBAqDI;AAAA;;AACL,aAAKrB,SAAL,CAAeoB,EAAf,CAAkB,YAAlB,EAAgC,KAAKf,aAArC,EAAoD,IAApD;AACAZ,gBAAQc,QAAR,CAAiBe,aAAjB,CAA+B,SAA/B,EAA0C;AAAA,gBAACC,KAAD,uEAAS,IAAT;AAAA,mBAAkB,MAAKnB,SAAL,GAAiBmB,KAAnC;AAAA,SAA1C;AACA,aAAKd,IAAL,CAAUW,EAAV,CAAa,UAAb,EAAyB,UAACI,KAAD,EAAW;AAChC,gBAAI,CAACA,KAAL,EAAY,MAAKpB,SAAL,GAAiB,KAAjB;AACf,SAFD,EAEG,IAFH;AAGH,KA3DI;AA6DLqB,SA7DK,mBA6DG,CAEP;AA/DI;;AAiEL;AAjEJ","file":"touchScript.js","sourceRoot":"../../../../assets/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\n\nconst Emitter = require('mEmitter');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        touchNode: cc.Node,\n        _xDelta: 0,\n        _yDelta: 0,\n        _canTouch: true,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    _onTouchStart: function (event) {\n        Emitter.instance.emit('sound', 'swipe');\n        this.node.emit('setInput', true);\n        if (!this._canTouch) return;\n        this._canTouch = false;\n\n        this.touchNode.once('touchend', function (event) {\n            let xDelta = event.getLocation().x - event.getStartLocation().x;\n            let yDelta = event.getLocation().y - event.getStartLocation().y;\n            cc.log('x delta is: ', xDelta, ', y delta is: ', yDelta);\n            if (Math.abs(xDelta) === 0 && Math.abs(yDelta) === 0) {\n                Emitter.instance.emit('canMove');\n                return;\n            }\n            if (Math.abs(xDelta) > Math.abs(yDelta)) {\n                if (xDelta > 0) {\n                    Emitter.instance.emit('moveRow', true);\n                    cc.log('move right');\n                } else {\n                    Emitter.instance.emit('moveRow', false);\n                    cc.log('move left');\n                }\n            } else {\n                if (yDelta > 0) {\n                    Emitter.instance.emit('moveCollumn', false);\n                    cc.log('move down');\n                } else {\n                    Emitter.instance.emit('moveCollumn', true);\n                    cc.log('move up');\n                }\n            }\n            Emitter.instance.emit('canMove');\n            return;\n        }, this);\n\n        this.touchNode.on('touchcancel', (event) => {\n            Emitter.instance.emit('canMove');\n            return;\n        }, this);\n    },\n\n    onLoad() {\n        this.touchNode.on('touchstart', this._onTouchStart, this);\n        Emitter.instance.registerEvent('canMove', (value = true) => this._canTouch = value);\n        this.node.on('setInput', (touch) => {\n            if (!touch) this._canTouch = false;\n        }, this);\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});\n"]}